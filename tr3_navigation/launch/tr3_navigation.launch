<launch>
  <arg name="sim" default="false" />
  <arg name="odom_frame_id"   default="odom"/>
  <arg name="base_frame_id"   default="base_link"/>
  <arg name="global_frame_id" default="map"/>
  <arg name="odom_topic" default="/tr3/base/odom" />
  <arg name="laser_topic" default="/tr3/lidar" />
  <arg name="base_topic" default="/tr3/base/diff/cmd_vel" />

  <remap from="odom" to="$(arg odom_topic)"/>
  <!--remap from="scan" to="$(arg laser_topic)"/-->
  <remap from="scan_filtered" to="$(arg laser_topic)" />
  <remap from="cmd_vel" to="$(arg base_topic)"/>

  <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen" if="$(eval sim == 'false')">
    <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
    <param name="serial_baudrate" type="int"    value="115200"/>
    <param name="frame_id" type="string" value="laser"/>
    <param name="inverted" type="bool" value="false"/>
    <param name="angle_compensate" type="bool" value="true"/>
  </node>

  <node pkg="laser_filters" type="scan_to_scan_filter_chain"
      name="laser_filter">
    <rosparam command="load" file="$(find tr3_navigation)/config/rplidar_filter_config.yaml" />
  </node>

  <!--<node pkg="tr3_navigation" name="tr3_cloud_transformer_node" type="cloud_transformer.py" output="screen" />-->
  <node pkg="tr3_navigation" name="tr3_tf_broadcaster_node" type="tr3_tf_broadcaster.py" output="screen" />

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping"  args="scan:=$(arg laser_topic)" >
    <param name="base_frame" value="$(arg base_frame_id)" />

    <param name="delta" value="0.1"/>
    <param name="xmin" value="-10"/>
    <param name="xmax" value="10"/>
    <param name="ymin" value="-10"/>
    <param name="ymax" value="10"/>

    <param name="linearUpdate" value="0.5"/>
    <param name="angularUpdate" value="0.436"/>
    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="particles" value="80"/>
  </node>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam command="load" file="$(find tr3_navigation)/config/costmap_common_params.yaml" ns="global_costmap" />
    <rosparam command="load" file="$(find tr3_navigation)/config/costmap_common_params.yaml" ns="local_costmap" />
    <rosparam command="load" file="$(find tr3_navigation)/config/local_costmap_params.yaml" />
    <rosparam command="load" file="$(find tr3_navigation)/config/global_costmap_params.yaml" />
    <rosparam command="load" file="$(find tr3_navigation)/config/global_planner_params.yaml"  />
    <rosparam command="load" file="$(find tr3_navigation)/config/move_base_params.yaml"  />

    <rosparam command="load" file="$(find tr3_navigation)/config/dwa_local_planner_params.yaml" />
    <rosparam command="load" file="$(find tr3_navigation)/config/base_local_planner_params.yaml" />
    <rosparam command="load" file="$(find tr3_navigation)/config/navfn_global_planner_params.yaml" />

    <param name="global_costmap/global_frame" value="$(arg global_frame_id)"/>
    <param name="global_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="local_costmap/global_frame" value="$(arg odom_frame_id)"/>
    <param name="local_costmap/robot_base_frame" value="$(arg base_frame_id)"/>
    <param name="DWAPlannerROS/global_frame_id" value="$(arg odom_frame_id)"/>
  </node>

</launch>
